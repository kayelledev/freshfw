%link{:rel => :stylesheet, :type => :"text/css", :href => "http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css"}
= javascript_include_tag "http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"

:css
  p {margin-top:3px;}
  span.remove-img{
    color:red;
    cursor:pointer;
  }

/ Declare Variable
/- furniture_category_id = Shoppe::ProductCategory.find_by_name('Furniture').id
/- furniture_items = Shoppe::Product.where(:product_category_id == furniture_category_id)

= form_for @product, :html => {:multipart => true} do |f|

  = f.error_messages
  = field_set_tag  t('shoppe.products.product_information') do
    %dl
      %dt= f.label :product_category_id, t('shoppe.products.product_category')
      %dd= f.collection_select :product_category_id, Shoppe::ProductCategory.ordered, :id, :permalink, {:prompt => false}, {:class => 'chosen'}

    .splitContainer
      %dl.third
        %dt= f.label :name, t('shoppe.products.name')
        %dd= f.text_field :name, :class => 'text focus'
      %dl.third
        %dt= f.label :permalink, t('shoppe.products.permalink')
        %dd= f.text_field :permalink, :class => 'text'
      %dl.third
        %dt= f.label :sku, t('shoppe.products.sku')
        %dd= f.text_field :sku, :class => 'text'
    %dl
      %dt= f.label :description, t('shoppe.products.description')
      %dd= f.text_area :description, :class => 'text'
    %dl
      %dt= f.label :short_description, t('shoppe.products.short_description')
      %dd= f.text_area :short_description, :class => 'text'
    %dl
      %dt= f.label :in_the_box, t('shoppe.products.in_the_box')
      %dd= f.text_area :in_the_box, :class => 'text'
    %dl
      %dt= f.label :width, t('shoppe.products.widht')
      %dd= f.text_field :width, :class => 'number', type: 'number'
    %dl
      %dt= f.label :height, t('shoppe.products.height')
      %dd= f.text_field :height, :class => 'number', type: 'number'
    %dl
      %dt= f.label :is_preset, t('shoppe.products.is_room')
      %dd= f.text_field :is_preset, :class => 'number', type: 'checkbox'
    %dl
      %dt= f.label :editor, 'Go to editor'
      %dd= link_to 'Go to editor', "/room_editor/edit?preset=#{@product.id}", class: "button"

  = field_set_tag t('shoppe.products.attributes') do
    .margin
      %table.productAttributes
        %thead
          %tr
            %td= t('shoppe.products.name')
            %td= t('shoppe.products.value')
            %td.searchable= t('shoppe.products.searchable?')
            %td.searchable= t('shoppe.products.public?')
            %td.remove= t('shoppe.products.remove')
            %td
        %tbody
          %tr.template{:style => 'display:none;'}
            %td= text_field_tag 'product[product_attributes_array][][key]', '', :placeholder => t('shoppe.products.name')
            %td= text_field_tag 'product[product_attributes_array][][value]', '', :placeholder => t('shoppe.products.value')
            %td.searchable= check_box_tag 'product[product_attributes_array][][searchable]', '1'
            %td.searchable= check_box_tag 'product[product_attributes_array][][public]', '1'
            %td.remove= link_to t('shoppe.remove') , '#', :class => 'button button-mini purple'
            %td.handle
          - for attribute in @product.product_attributes
            %tr
              %td= text_field_tag 'product[product_attributes_array][][key]', attribute.key, :placeholder => t('shoppe.products.name')
              %td= text_field_tag 'product[product_attributes_array][][value]', attribute.value, :placeholder => t('shoppe.products.value')
              %td.searchable= check_box_tag 'product[product_attributes_array][][searchable]', '1', attribute.searchable?
              %td.public= check_box_tag 'product[product_attributes_array][][public]', '1', attribute.public?
              %td.remove= link_to t("shoppe.remove"), '#', :class => 'button button-mini purple'
              %td.handle
      %p.addAttribute= link_to t('shoppe.products.add_attribute') , '#', :data => {:behavior => 'addAttributeToAttributesTable'}, :class => 'button button-mini green'

  = field_set_tag t('shoppe.products.images') do
    .splitContainer
      - array_images.each do |img|
        %dl.half
          %dt= f.label img, t("shoppe.products.#{img}"), :class => 'attachmentPreview'
          %dd
            - image = @product.send img
            - if image_link(@product, img)
              = link_to image_tag image_link(@product, img), :class => 'imageContainer', width: 80,  id: img
              %span.glyphicon.glyphicon-remove.remove-img{id: img}
            %p= f.file_field img
            %p
              = f.label "url_#{img}"
              = f.text_field "url_#{img}", id: img, class: 'url_image'
            %p= f.hidden_field "#{img}_cache"
        %br
      %dl.half

  - unless @product.has_variants?
    = field_set_tag t('shoppe.products.pricing') do
      .splitContainer
        %dl.third
          %dt= f.label :price, t('shoppe.products.price')
          %dd
            .moneyInput
              .currency= Shoppe.settings.currency_unit.html_safe
              = f.text_field :price, :class => 'text'
        %dl.third
          %dt= f.label :cost_price, t('shoppe.products.cost_price')
          %dd
            .moneyInput
              .currency= Shoppe.settings.currency_unit.html_safe
              = f.text_field :cost_price, :class => 'text'
        %dl.third
          %dt= f.label :tax_rate_id, t('shoppe.products.tax_rate')
          %dd= f.collection_select :tax_rate_id, Shoppe::TaxRate.ordered, :id, :description, {:include_blank => true}, {:class => 'chosen-with-deselect', :data => {:placeholder => t('shoppe.products.no_tax')}}

    = field_set_tag  t('shoppe.products.stock_control') do
      .splitContainer
        %dl.half
          %dt= f.label :weight, t('shoppe.products.weight')
          %dd= f.text_field :weight, :class => 'text'

        %dl.half
          %dt= f.label :stock_control,  t('shoppe.products.stock_control')
          %dd.checkbox
            = f.check_box :stock_control
            = f.label :stock_control, t('shoppe.products.enable_stock_control?')

  = field_set_tag  t('shoppe.products.website_properties') do
    .splitContainer
      %dl.half
        %dt= f.label :active,  t('shoppe.products.active?')
        %dd.checkbox
          = f.check_box :active
          = f.label :active,  t('shoppe.products.on_sale_info')
      %dl.half
        %dt= f.label :featured,  t('shoppe.products.featured?')
        %dd.checkbox
          = f.check_box :featured
          = f.label :featured, t('shoppe.products.featured_info')

  - if room_categories.include? @product.product_category.try(:permalink)
    = field_set_tag  t('shoppe.products.furniture_included') do
      .splitContainer
      - Shoppe::Product.furniture.order("product_category_id ASC").each do |product|
        %dl.third
          %dt= f.label :furniture_included, t("#{product.product_category.name}: #{product.name} (#{product.sku})")
          %dd= check_box_tag 'included[]', product.id, (@product.included_products.include? product)
          %dd= product.name
          %dt
            - if image_link(product, 'default_image')
              = link_to (image_tag image_link(product, 'default_image'), :class => 'imageContainer', width: 80),  edit_product_path(product)

  %p.submit
    - unless @product.new_record?
      %span.right= link_to t('shoppe.delete') , @product, :class => 'button purple', :method => :delete, :data => {:confirm => "Are you sure you wish to remove this product?"}
    = f.submit t('shoppe.submit'),  :class => 'button green'
    = link_to t('shoppe.cancel'), :products, :class => 'button'

:javascript
  $( "span.remove-img" ).click(function() {
    var span = $(this);
    var id = span.attr('id');

    $.ajax({
      type: 'post',
      data: {
              img_id: id,
              id: "#{@product.id}",
            },
      headers: {
        'X-CSRF-Token': "#{form_authenticity_token.to_s}"
      },
      url: "/products/destroy_img",
      success: function(response) {
        $('input.url_image#'+id).val('');
        $('img#'+id).remove();
        span.remove();
      }
    })
  });